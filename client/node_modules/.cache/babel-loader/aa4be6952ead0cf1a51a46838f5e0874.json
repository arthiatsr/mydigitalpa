{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\18325\\\\Desktop\\\\codingbootcamp\\\\repos\\\\mydigitalpa\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\18325\\\\Desktop\\\\codingbootcamp\\\\repos\\\\mydigitalpa\\\\client\\\\src\\\\components\\\\logincheck.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from \"react-router-dom\";\nconst fakeAuth = {\n  isAuthenticated: false,\n\n  authenticate(cb) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 100);\n  },\n\n  signout(cb) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n\n};\n\nconst Public = () => React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Public\");\n\nconst Protected = () => React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Protected\");\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirectToReferrer: false\n    };\n\n    this.login = () => {\n      fakeAuth.authenticate(() => {\n        this.setState(() => ({\n          redirectToReferrer: true\n        }));\n      });\n    };\n  }\n\n  render() {\n    const redirectToReferrer = this.state.redirectToReferrer;\n\n    const _ref = this.props.location.state || {\n      from: {\n        pathname: '/'\n      }\n    },\n          from = _ref.from;\n\n    if (redirectToReferrer === true) {\n      return React.createElement(Redirect, {\n        to: from,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"You must login to view this page at \", from.pathname, \" \"), React.createElement(\"button\", {\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n}\n\nconst PrivateRoute = (_ref2) => {\n  let Component = _ref2.component,\n      rest = _objectWithoutProperties(_ref2, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => fakeAuth.isAuthenticated === true ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nconst AuthButton = withRouter(({\n  history\n}) => fakeAuth.isAuthenticated ? React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"Hi There!!! \", React.createElement(\"button\", {\n  onClick: () => {\n    fakeAuth.signout(() => history.push('/'));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"Log out\")) : React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, \"You are not Logged in\"));\nexport default Login;","map":{"version":3,"sources":["C:/Users/18325/Desktop/codingbootcamp/repos/mydigitalpa/client/src/components/logincheck.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Redirect","withRouter","fakeAuth","isAuthenticated","authenticate","cb","setTimeout","signout","Public","Protected","Login","state","redirectToReferrer","login","setState","render","props","location","from","pathname","PrivateRoute","component","rest","AuthButton","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nconst fakeAuth = {\r\n    isAuthenticated: false,\r\n    authenticate(cb) {\r\n      this.isAuthenticated = true \r\n      setTimeout(cb, 100)\r\n    },\r\n    signout(cb) {\r\n      this.isAuthenticated = false\r\n      setTimeout(cb, 100)    \r\n    }\r\n  };\r\n  const Public = () => <h3>Public</h3>;\r\n  const Protected = () => <h3>Protected</h3>;\r\n  \r\n  class Login extends React.Component {\r\n    state = {\r\n      redirectToReferrer: false\r\n    }\r\n  \r\n    login = () => {\r\n      fakeAuth.authenticate(() => {\r\n        this.setState(() => ({\r\n          redirectToReferrer: true\r\n  \r\n        }))\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      const { redirectToReferrer } = this.state;\r\n      const { from } = this.props.location.state || { from: { pathname: '/' }};\r\n      if(redirectToReferrer === true){\r\n        return(\r\n          <Redirect to={from} />\r\n        )\r\n      };\r\n      return (\r\n        <div>\r\n          <p>You must login to view this page at {from.pathname} </p>\r\n          <button onClick={this.login}>Login</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      fakeAuth.isAuthenticated === true \r\n      ? <Component {...props} /> \r\n      : <Redirect to= {{\r\n          pathname: '/login',\r\n          state: { from: props.location }\r\n      }} />\r\n    )} />\r\n  );\r\n  \r\n  const AuthButton = withRouter(({ history }) => (\r\n    fakeAuth.isAuthenticated ? (<p>Hi There!!! <button onClick={() => {\r\n      fakeAuth.signout(() => history.push('/'))\r\n    }}>Log out</button></p>)\r\n      : (<p>You are not Logged in</p>)\r\n    \r\n  ))\r\n\r\n  export default Login;"]},"metadata":{},"sourceType":"module"}